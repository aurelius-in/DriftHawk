apiVersion: apps/v1
kind: Deployment
metadata: { name: ops-bot, labels: { app: ops-bot } }
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate: { maxSurge: 1, maxUnavailable: 0 }
  selector: { matchLabels: { app: ops-bot } }
  template:
    metadata: { labels: { app: ops-bot }, annotations: { "cosign.sigstore.dev/verified": "true" } }
    spec:
      securityContext:
        runAsNonRoot: true
        seccompProfile: { type: RuntimeDefault }
        runAsUser: 10001
        runAsGroup: 10001
        fsGroup: 10001
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 30
      serviceAccountName: ops-bot-sa
      containers:
        - name: ops-bot
          image: ghcr.io/OWNER/drifthawk-ops-bot:sha256-PINNED
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            capabilities: { drop: ["ALL"] }
          ports: [{ containerPort: 8080 }]
          startupProbe:
            httpGet: { path: /livez, port: 8080 }
            initialDelaySeconds: 3
            periodSeconds: 5
            failureThreshold: 10
          livenessProbe:
            httpGet: { path: /livez, port: 8080 }
            initialDelaySeconds: 5
            periodSeconds: 10
          readinessProbe:
            httpGet: { path: /readyz, port: 8080 }
            initialDelaySeconds: 3
            periodSeconds: 10
          lifecycle:
            preStop:
              exec: { command: ["sh","-c","sleep 5"] }
          envFrom: [{ secretRef: { name: ops-bot-secrets } }]
          env:
            - name: LOG_LEVEL
              valueFrom: { configMapKeyRef: { name: ops-bot-config, key: LOG_LEVEL } }
          resources:
            requests: { cpu: "100m", memory: "128Mi" }
            limits:   { cpu: "500m", memory: "256Mi" }
---
apiVersion: v1
kind: Service
metadata: { name: ops-bot }
spec:
  selector: { app: ops-bot }
  ports: [{ port: 80, targetPort: 8080 }]


